using System;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can write to stdout for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] P) {
        // write your code in C# 6.0 with .NET 4.5 (Mono)
                  
        
            int[] leftBorder = new int[P.Length]; //leftBorder[i]-number of discs that have leftBorder border at i
            int[] leftIntersections = new int[P.Length];
            int counter = 0;





            for (int i = 0; i < P.Length; i++)
            {
                var a =(int)Math.Max((long)i - P[i], 0);
                leftBorder[a < i ? a : i]++;

            }

            

            for (int i = 0; i < P.Length; i++)
            {
                if (i==0){
                    leftIntersections[i] = leftBorder[i] - 1;//-1 we deduct disc at has middle at i
                    //leftIntersections[i] = P.Length-1;

                }
                else{
                    leftIntersections[i] = leftIntersections[i - 1] - 1 + leftBorder[i];// we deduct disc that has middle at i and add discs from rigth that intesect at i
                }

            }
            // Count pairs, right side only:
            // 1. overlaps based on disk size
            // 2. overlaps based on disks but not centers
            for (int i = 0; i < P.Length; i++)
            {
               var a = P[i];
               counter += ((a < P.Length - i) ? a : P.Length - i - 1);
                if (i != P.Length - 1)
                {
                    counter += leftIntersections[((a < P.Length - i) ? i + a : P.Length - 1)];
                }
                if (counter > 10000000) return -1;
            }
            return counter;
   

    }
}
